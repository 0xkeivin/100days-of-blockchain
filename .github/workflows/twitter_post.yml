# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        # fetchs all history of tags and 
        with:
          fetch-depth: 0
      - name: git setup
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
      - name: Fetch and Diff PR with base from which it was cloned
        if: ${{ github.event.pull_request.base.sha }}  
        env:
          FILE_NAME: "README.md"
        run: |
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.sha }} $FILE_NAME > readme_diff.txt
          if [ -s readme_diff.txt ]
          then
                echo "readme_diff.txt is NOT NULL"
                # PATTERN="\ No newline at end of file"
                echo "begin cat"
                cat readme_diff.txt
                echo " "
                echo "after final sed"
                # cat readme_diff.txt | sed -n "/$PATTERN/,/$PATTERN/p" | sed '1,2d;$d' | sed "s/\+//g"
                cat readme_diff.txt | awk '/^\+/' | sed '1,2d' | sed "s/\+//g" > final_payload.txt
                # append signature
                printf "\n\n#100DaysOfCode" >> final_payload.txt
                printf "\n➡️ Posted via Tweepy + Github actions" >> final_payload.txt
                # show final_payload.txt
                echo""
                cat final_payload.txt
          else
                echo "readme_diff.txt is NULL"
          fi
      - name: Lists files 
        run: |
          ls -alht
          pwd
      # Runs a set of commands using the runners shell
      - name: Checks python and pip versions
        run: |
          python --version
          pip --version
      # Runs a set of commands using the runners shell
      - name: Installs requirements.txt and exports secrets
        run: |
          pip install -r requirements.txt
      # Runs a set of commands using the runners shell
      - name: Runs python script
        env:
          API_KEY: ${{secrets.API_KEY}}
          API_KEY_SECRET: ${{secrets.API_KEY_SECRET}}
          ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
          ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
        run: |
          echo "API_KEY is ${API_KEY}"
          python src/tweet_example.py